name: Android Integration Tests

on:
  workflow_call:
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        api-level: [30]
        target: [google_apis]
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Delete unnecessary tools ðŸ”§
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: false # Don't remove Android tools
          tool-cache: true
          dotnet: true
          haskell: true
          swap-storage: true
          docker-images: false
          large-packages: false

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: beta
          cache: true

      - name: Install Flutter dependencies
        run: flutter pub get ./example

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android API 30 system image
        run: |
          # Accept licenses
          yes | sdkmanager --licenses || true
          
          # Install API 30 system image and required tools
          sdkmanager "system-images;android-${{ matrix.api-level }};${{ matrix.target }};x86_64"
          sdkmanager "platforms;android-${{ matrix.api-level }}"
          sdkmanager "build-tools;30.0.3"
          
          # Verify installation
          echo "Installed system images:"
          sdkmanager --list | grep "system-images;android-${{ matrix.api-level }}"

      - name: Create Flutter Virtual Emulator for API 30
        run: |
          # Create AVD with API 30
          avdmanager create avd \
            --name "flutter_api_${{ matrix.api-level }}" \
            --package "system-images;android-${{ matrix.api-level }};${{ matrix.target }};x86_64" \
            --device "pixel" \
            --force
          
          echo "Created AVD:"
          avdmanager list avd
          
          echo "Flutter emulators:"
          flutter emulators

      - name: Start Android Emulator
        run: |
          # Enable KVM for better performance
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          
          # Start emulator in background
          nohup emulator -avd flutter_api_${{ matrix.api-level }} \
            -no-window \
            -no-audio \
            -no-snapshot-save \
            -no-boot-anim \
            -accel on \
            -gpu swiftshader_indirect \
            -camera-back none \
            -camera-front none \
            -memory 3072 \
            -cores 2 &
          
          # Wait for emulator to boot
          echo "Waiting for emulator to start..."
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d "\r") ]]; do sleep 2; done; input keyevent 82'
          
          echo "Emulator is ready!"
          adb devices
          flutter devices

      - name: Run integration tests
        id: Run-integration-tests
        continue-on-error: true
        timeout-minutes: 15
        working-directory: ./example
        run: |
          # Clean and prepare
          flutter clean
          flutter pub get
          
          # Build APK for API 30
          flutter build apk --debug
          
          # Install APK on emulator
          adb install -r build/app/outputs/flutter-apk/app-debug.apk
          
          # Grant permissions for API 30
          adb shell pm grant studio.midoridesign.gal_example android.permission.WRITE_EXTERNAL_STORAGE || true
          adb shell pm grant studio.midoridesign.gal_example android.permission.READ_EXTERNAL_STORAGE || true
          adb shell pm grant studio.midoridesign.gal_example android.permission.READ_MEDIA_IMAGES || true
          adb shell pm grant studio.midoridesign.gal_example android.permission.READ_MEDIA_VIDEO || true
          
          # Run integration tests
          flutter test integration_test/integration_test.dart \
            --device-id=$(adb devices | grep device$ | head -1 | cut -f1) \
            --verbose

      - name: Retry integration tests
        id: Retry-integration-tests
        continue-on-error: true
        timeout-minutes: 15
        if: steps.Run-integration-tests.outcome == 'failure'
        working-directory: ./example
        run: |
          echo "Retrying integration tests..."
          
          # Clean and retry
          flutter clean
          flutter pub get
          
          # Reinstall APK
          flutter build apk --debug
          adb install -r build/app/outputs/flutter-apk/app-debug.apk
          
          # Grant permissions again
          adb shell pm grant studio.midoridesign.gal_example android.permission.WRITE_EXTERNAL_STORAGE || true
          adb shell pm grant studio.midoridesign.gal_example android.permission.READ_EXTERNAL_STORAGE || true
          adb shell pm grant studio.midoridesign.gal_example android.permission.READ_MEDIA_IMAGES || true
          adb shell pm grant studio.midoridesign.gal_example android.permission.READ_MEDIA_VIDEO || true
          
          # Retry integration tests
          flutter test integration_test/integration_test.dart \
            --device-id=$(adb devices | grep device$ | head -1 | cut -f1) \
            --verbose

      - name: Final retry integration tests
        if: steps.Retry-integration-tests.outcome == 'failure'
        timeout-minutes: 15
        working-directory: ./example
        run: |
          echo "Final retry attempt..."
          
          # Clear app data and retry
          adb shell pm clear studio.midoridesign.gal_example || true
          
          flutter clean
          flutter pub get
          flutter build apk --debug
          adb install -r build/app/outputs/flutter-apk/app-debug.apk
          
          # Grant permissions one more time
          adb shell pm grant studio.midoridesign.gal_example android.permission.WRITE_EXTERNAL_STORAGE || true
          adb shell pm grant studio.midoridesign.gal_example android.permission.READ_EXTERNAL_STORAGE || true
          adb shell pm grant studio.midoridesign.gal_example android.permission.READ_MEDIA_IMAGES || true
          adb shell pm grant studio.midoridesign.gal_example android.permission.READ_MEDIA_VIDEO || true
          
          # Final test run
          flutter test integration_test/integration_test.dart \
            --device-id=$(adb devices | grep device$ | head -1 | cut -f1) \
            --verbose

      - name: Debug info on failure
        if: failure()
        run: |
          echo "=== Debug Information ==="
          echo "Flutter devices:"
          flutter devices
          echo "ADB devices:"
          adb devices
          echo "Running processes:"
          ps aux | grep emulator || true
          echo "Logcat (last 50 lines):"
          adb logcat -d | tail -50 || true