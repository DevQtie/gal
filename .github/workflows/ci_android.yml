name: Android Integration Tests

on:
  workflow_call:
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        api-level: [30]
        target: [default, google_apis]
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Delete unnecessary tools ðŸ”§
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: false # Don't remove Android tools
          tool-cache: true # Remove image tool cache - rm -rf "$AGENT_TOOLSDIRECTORY"
          dotnet: true # rm -rf /usr/share/dotnet
          haskell: true # rm -rf /opt/ghc...
          swap-storage: true # rm -f /mnt/swapfile (4GiB)
          docker-images: false # Takes 16s, enable if needed in the future
          large-packages: false # includes google-cloud-sdk and it's slow


      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Fix Android AVD path for Ubuntu 24.04
        run: |
          # Workaround for Ubuntu 24.04 AVD path issue
          # https://github.com/actions/runner-images/issues/11482
          mkdir -p /home/runner/.config
          ln -s /home/runner/.config/.android /home/runner/.android || true

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: beta
          cache: true

      - name: Install Flutter dependencies
        run: flutter pub get ./example

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Cache AVD
        uses: actions/cache@v4
        id: cache-avd
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ runner.os }}-${{ matrix.api-level }}
          restore-keys: |
            avd-${{ runner.os }}-

      - name: Run integration tests
        id: Run-integration-tests
        continue-on-error: true
        timeout-minutes: 20
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          working-directory: ./example
          arch: x86_64
          emulator-boot-timeout: 300  # Increased boot timeout for API 30
          disable-spellchecker: true
          force-avd-creation: false
          disk-size: 8GB
          ram-size: 4096M
          heap-size: 1024M
          sdcard-path-or-size: ${{ matrix.api-level < 29 && '10M' || null }}
          emulator-options: -accel on -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
          pre-emulator-launch-script: |
            # Fix AVD path issue on Ubuntu 24.04
            # Create symbolic link to fix path mismatch between avdmanager and emulator
            mkdir -p /home/runner/.android
            if [ -d /home/runner/.config/.android ] && [ ! -L /home/runner/.android ]; then
              ln -s /home/runner/.config/.android /home/runner/.android
            fi
            # Ensure proper directory structure exists
            mkdir -p ~/.android/avd
            mkdir -p ~/.config/.android/avd
          script: |
            if [ ${{ matrix.api-level }} -le 29 ]; then flutter build apk --debug; adb install -r build/app/outputs/flutter-apk/app-debug.apk; adb shell pm grant studio.midoridesign.gal_example android.permission.WRITE_EXTERNAL_STORAGE; adb shell pm grant studio.midoridesign.gal_example android.permission.READ_EXTERNAL_STORAGE; fi
            flutter test integration_test/integration_test.dart

      - name: Retry integration tests
        id: Retry-integration-tests
        continue-on-error: true
        timeout-minutes: 20
        if: steps.Run-integration-tests.outcome == 'failure'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          working-directory: ./example
          arch: x86_64
          emulator-boot-timeout: 300  # Increased boot timeout for API 30
          disable-spellchecker: true
          force-avd-creation: false
          disk-size: 8GB
          ram-size: 4096M
          heap-size: 1024M
          sdcard-path-or-size: ${{ matrix.api-level < 29 && '10M' || null }}
          emulator-options: -accel on -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
          pre-emulator-launch-script: |
            adb kill-server
            adb start-server
            # Ensure proper directory structure exists
            mkdir -p ~/.android/avd
            mkdir -p ~/.config/.android/avd
          script: |
            flutter clean && flutter pub get
            if [ ${{ matrix.api-level }} -le 29 ]; then flutter build apk --debug; adb install -r build/app/outputs/flutter-apk/app-debug.apk; adb shell pm grant studio.midoridesign.gal_example android.permission.WRITE_EXTERNAL_STORAGE; adb shell pm grant studio.midoridesign.gal_example android.permission.READ_EXTERNAL_STORAGE; fi
            flutter test integration_test/integration_test.dart

      - name: Re:Retry integration tests
        if: steps.Retry-integration-tests.outcome == 'failure'
        timeout-minutes: 20
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          working-directory: ./example
          arch: x86_64
          emulator-boot-timeout: 300  # Increased boot timeout for API 30
          disable-spellchecker: true
          force-avd-creation: false
          disk-size: 8GB
          ram-size: 4096M
          heap-size: 1024M
          sdcard-path-or-size: ${{ matrix.api-level < 29 && '10M' || null }}
          emulator-options: -accel on -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
          pre-emulator-launch-script: |
            adb kill-server
            adb start-server
            # Ensure proper directory structure exists
            mkdir -p ~/.android/avd
            mkdir -p ~/.config/.android/avd
          script: |
            flutter clean && flutter pub get
            if [ ${{ matrix.api-level }} -le 29 ]; then flutter build apk --debug; adb install -r build/app/outputs/flutter-apk/app-debug.apk; adb shell pm grant studio.midoridesign.gal_example android.permission.WRITE_EXTERNAL_STORAGE; adb shell pm grant studio.midoridesign.gal_example android.permission.READ_EXTERNAL_STORAGE; fi
            flutter test integration_test/integration_test.dart
